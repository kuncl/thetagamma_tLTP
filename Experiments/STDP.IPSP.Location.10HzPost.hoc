objref SIL10_grpSTDP

proc SIL10_setLocation() { 
	if ($1 == 0 )  {
		CA1PyramidalCell[0].soma nclist.o(iBC_CA1_nc).syn.loc(0.5) 
		SIL10_locCode= 0
	} else if ($1 == 1){
		CA1PyramidalCell[0].apical[1] nclist.o(iBC_CA1_nc).syn.loc(0.3747246) 
		SIL10_locCode= 100
	} else if ($1 == 2){
		CA1PyramidalCell[0].apical[3] nclist.o(iBC_CA1_nc).syn.loc(0.29254594) 
		SIL10_locCode= 200
	} else if ($1 == 3){
		CA1PyramidalCell[0].apical[4] nclist.o(iBC_CA1_nc).syn.loc(0.066301993) 
		SIL10_locCode= 300
	} else if ($1 == 4){
		CA1PyramidalCell[0].apical[4] nclist.o(iBC_CA1_nc).syn.loc(0.63816793) 
		SIL10_locCode= 400
	} else if ($1 == 5){
		CA1PyramidalCell[0].apical[5] nclist.o(iBC_CA1_nc).syn.loc(0.35546496) 
		SIL10_locCode= 500
	} else {
		print "No options for various inhibition location, ", $1
		SIL10_locCode = 0		
	}
	print "Inhibition Location was changed to ", SIL10_locCode, "um from soma"	
}

proc SIL10_init(){ local i, color_code localobj strpath
	execute("system(\"mkdir ../output/STDP.location.10HzPost\")")
	
	SIL10_GUI()
	
	SIL10_def_inh_loc = 1	//120um
	
	color_code = 0
	// for (i = 0; i < 6 ; i =i +1) {
	for (i = 0; i <= 1; i =i +1) {
		color_code  = i+1
		SIL10_body(i, color_code)
	}


} 
proc SIL10_body() { local color_code
	SIL10_setLocation($1)

	
	
	dCA1_BURST_FREQ = 10
	dCA1_BURST_NUM = 10
	bCA1Burst = true
	
	
	bStdpFig = false	
	color_code = $2	
	bSTDPoutputFig = false
	
	STDP_Curve()	
	 
	STDP_WeightsEPSC.line(SIL10_grpSTDP, STDP_Dts, color_code , color_code % 9 + 1)
	SIL10_grpSTDP.size(-100,100,-100,100)

	SIL10_out($1)
	
	dCA1_BURST_FREQ = 50
	dCA1_BURST_NUM = 3
	bCA1Burst = false
	
	SIL10_setLocation(SIL10_def_inh_loc) 
}

proc printVec() { localobj fp
	fp = new File()
	fp.wopen($s1)
	$o2.printf(fp)
	fp.close()
}

strdef SIL10_str
proc SIL10_out() { localobj strdir, strpath
		
	strdir = new myString("output\\STDP.location.10HzPost")
	strpath = new myString()	
	
	sprint(strpath.s, "%s\\%d_location_epsc_%dum.dat", strdir.s, Simul_ID, SIL10_locCode)
	printVec(strpath.s, STDP_WeightsEPSC)
	sprint(strpath.s, "%s\\%d_location_readout_%dum.dat", strdir.s, Simul_ID, SIL10_locCode)
	printVec(strpath.s, STDP_ReadOut)
}

proc SIL10_GUI() { 
	SIL10_grpSTDP = new Graph()
	SIL10_grpSTDP.exec_menu("Keep Lines")
	SIL10_grpSTDP.size(-100,100,-100,100)
}
